<?php
// Copyright 1999-2016. Parallels IP Holdings GmbH.
?>
<?php echo $this->renderList($this->list); ?>
<script type="text/javascript">
    var removeSlaves = function() {
        Jsw.messageBox.show({
            type: Jsw.messageBox.TYPE_YESNO,
            subtype: 'delete',
            text: '<?php echo $this->lmsg('removeConfirmation') ?>',
            onYesClick: function() {
                var data = {config: []};
                var list = $$('div[id^="pm-list-"]').first();
                list.select('input[name="listCheckbox[]"]').each(function(checkbox) {
                    if (checkbox.checked) {
                        data.config.push(checkbox.value);
                    }
                });

                Jsw.redirectPost('<?php echo $this->getHelper('baseUrl')->moduleUrl(array('action' => 'remove')) ?>', data);
            },
            buttonTitles: {
                'yes': '<?php echo $this->lmsg('confirmationYes') ?>',
                'no': '<?php echo $this->lmsg('confirmationNo') ?>'
            }
        });
    };

    var updateSlaves = function() {
        var list = $$('div[id^="pm-list-"]').first();
        list.select('.slave-status').each(function(icon) {
            icon.up('td').addClassName('min');
        });

        var globalCheckbox = list.select('input[name="listGlobalCheckbox"]').first();
        if (!globalCheckbox) return;
        globalCheckbox.up('th').addClassName('select');
        globalCheckbox.observe('click', function() {
            list.select('input[name="listCheckbox[]"]').each(function(checkbox) {
                if (globalCheckbox.checked) {
                    checkbox.up('tr').addClassName('selected');
                } else {
                    checkbox.up('tr').removeClassName('selected');
                }
                checkbox.checked = globalCheckbox.checked;
            });
        });
        list.select('input[name="listCheckbox[]"]').each(function(checkbox) {
            checkbox.up('td').addClassName('select');
            checkbox.observe('click', function() {
                if (checkbox.checked) {
                    checkbox.up('tr').addClassName('selected');
                } else {
                    checkbox.up('tr').removeClassName('selected');
                    globalCheckbox.checked = false;
                }
            });
        });
    };

    var resyncZones = function() {
        Jsw.messageBox.show({
            type: Jsw.messageBox.TYPE_YESNO,
            subtype: 'confirm',
            text: '<?php echo $this->lmsg('resyncConfirmation') ?>',
            onYesClick: function() {
                Jsw.redirectPost('<?php echo $this->getHelper('baseUrl')->moduleUrl(array('action' => 'resync')) ?>');
            },
            buttonTitles: {
                'yes': '<?php echo $this->lmsg('confirmationYes') ?>',
                'no': '<?php echo $this->lmsg('confirmationNo') ?>'
            }
        });
    };

    Jsw.onReady(function() {
        updateSlaves();
        var list = $$('div[id^="pm-list-"]').first();
        var component = list.select('.content-wrapper > div').first();
        if (component) {
            Jsw.getComponent(component.identify())._onRedraw = updateSlaves;
        }
    });
</script>
